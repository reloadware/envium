version: 2.19

workflows:
  version: 2
  test:
    jobs:
      {%- for v in supported_versions %}
      - test-{{ v.id }}
      {%- endfor %}
      - check-black
#      - flake8
      - mypy
      - publish:
          requires:
#            - flake8
            - mypy
            - check-black
            {%- for v in supported_versions %}
            - test-{{ v.id }}
            {%- endfor %}
          filters:
            branches:
              only: master
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/

defaults: &defaults
  docker:
    - image: circleci/python:3.6
  environment:
    CRYPTOGRAPHY_DONT_BUILD_RUST: 1

{% raw %}
cache-key: &cache-key
  deps-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
{% endraw %}

restore_cache: &restore_cache
  restore_cache:
    name: "Restore cache"
    key: *cache-key

save_cache: &save_cache
  save_cache:
    key: *cache-key
    paths:
     - .venv

install_envo: &install_envo
  run:
    name: Install envo
    command: pip install envo=={{ envo_version }}

bootstrap: &bootstrap
  run:
    name: Bootstrap
    command: p.bootstrap
    shell: envo ci


jobs:
  flake8:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - *install_envo
      - *bootstrap
      - run:
          name: Flake8
          command: p.flake
          shell: envo ci
      - *save_cache

  mypy:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - *install_envo
      - *bootstrap
      - run:
          name: Mypy
          command: p.mypy
          shell: envo ci
      - *save_cache

  check-black:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - *install_envo
      - *bootstrap
      - run:
          name: Black
          command: p.check_black
          shell: envo ci
      - *save_cache

{%- for v in supported_versions %}
  test-{{ v.id }}:
    <<: *defaults
    docker:
      - image: circleci/python:{{ v.ver }}

    steps:
      - checkout
      - *restore_cache
      - *install_envo
      - *bootstrap
      - run:
          name: Test
          command: p.test
          shell: envo ci
      - store_artifacts:
          path: htmlcov
          destination: coverage
      - store_test_results:
          path: test-results
      - *save_cache
{% endfor %}

  publish:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - *install_envo
      - *bootstrap
      - run:
          name: Generate version
          command: p.generate_version
          shell: envo ci
      - run:
          name: Build
          command: p.build
          shell: envo ci
      - run:
          name: publish
          command: p.publish
          shell: envo ci
      - *save_cache
